{
  "hash": "863e6a6d3e5a5ed72f7400d864504753",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 2: Kick-starter 1: Building Network Data Models\"\ndate: \"12/4/2023\"\ndate-modified: \"2023-06-04\"\nformat: html\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: auto\neditor: visual\n---\n\n\n::: callout-warning\n## Declaimer\n\nThis document aims to provide you guidance on how to get started with Takehome Exercise 2, especially how to prepare the network data. It is not a model answer.\n:::\n\n## Getting Started\n\nThe code chunk below will be used to install and load the necessary R packages to meet the data preparation, data wrangling, data analysis and visualisation needs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, lubridate, tidyverse)\n```\n:::\n\n\n## Data Import\n\nIn the code chunk below, `fromJSON()` of **jsonlite** package is used to import *mc2_challenge_graph.json* into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_data <- fromJSON(\"data/mc2_challenge_graph.json\")\n```\n:::\n\n\n::: Callout-note\nExamine the list object created by using RStudio, especially *nodes* and *links* data tables.\n:::\n\n## Data Wrangling\n\n### Extracting the nodes\n\nThe code chunk is used to extract *nodes* data table from *mc2_data* list object and save the output in a tibble data frame object called *mc2_nodes*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_nodes <- as_tibble(mc2_data$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n```\n:::\n\n\n::: callout-note\n## Thing to learn\n\n-   `select()` is used not only to select the field needed but also to re-organise the sequent of the fields.\n:::\n\n### Extracting the edges\n\nThe code chunk is used to extract *edgess* data table from *mc2_data* list object and save the output in a tibble data frame object called *mc2_edges*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_edges <- as_tibble(mc2_data$links) %>%\n  mutate(ArrivalDate = ymd(arrivaldate)) %>%\n  mutate(Year = year(ArrivalDate)) %>%\n  select(source, target, ArrivalDate, Year, hscode, valueofgoods_omu, \n         volumeteu, weightkg, valueofgoodsusd) %>% \n  distinct()\n```\n:::\n\n\n::: callout-note\n## Things to learn\n\n-   `mutate()` is used two times to create two derive fields.\n    -   `ymd()` of **lubridate** package is used to covert *arrivaldate* field from character data type into date data type.\n    -   `year()` of **lubridate** package is used to convert the values in ArrivalDate field into year values.\n-   `select()` is used not only to select the field needed but also to re-organise the sequent of the fields.\n:::\n\n### Preparing edges data table\n\n::: callout-note\n## Things to learn from the code chunk below\n\n-   `filter()` is used to select records whereby hscode is equal 306170 and Year is equal to 2028.\n-   `group_by()` is used to aggregate values by source, target, hscode, Year.\n-   `summarise()` and `n()` are used to count the aggregated records.\n-   filter() is then used to perform two selections\n    -   to select all records whereby source are not equal to target, and\n    -   to select all records whereby the values of their weights field are greater than 20\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_edges_aggregated <- mc2_edges %>%\n  filter(hscode == \"306170\" & Year == \"2028\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target) %>%\n  filter(weights > 20) %>%\n  ungroup()\n```\n:::\n\n\n## Preparing nodes data\n\nInstead of using the nodes data table extracted from *mc2_data*, we will prepare a new nodes data table by using the source and target fields of `mc2_edges_aggregated` data table. This is necessary to ensure that the nodes in nodes data tables include all the source and target values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nid1 <- mc2_edges_aggregated %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- mc2_edges_aggregated %>%\n  select(target) %>%\n  rename(id = target)\nmc2_nodes_extracted <- rbind(id1, id2) %>%\n  distinct()\n```\n:::\n\n\n## Building the tidy graph data model\n\nThe code chunk below is then used to build the tidy graph data model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_graph <- tbl_graph(nodes = mc2_nodes_extracted,\n                       edges = mc2_edges_aggregated,\n                       directed = TRUE)\n```\n:::\n\n\n### Visualising the network graph with ggraph\n\nIn order to check if the tidygraph model has been prepared correctly, we can use selected functions of **ggraph** package to plot a simple network graph as shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(mc2_graph,\n       layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes()) +\n  theme_graph()\n```\n\n::: {.cell-output-display}\n![](MC2-Kick-starter1_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n### Exporting data objects\n\nCode chunk below will be used to export the data objects prepared in previous section into rds format for subsequent use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(mc2_nodes_extracted, \"data/mc2_nodes_extracted.rds\")\nwrite_rds(mc2_edges_aggregated, \"data/mc2_edges_aggregated.rds\")\nwrite_rds(mc2_graph, \"data/mc2_graph.rds\")\n```\n:::\n\n\n## Preparing Network Data for visNetwork\n\nInstead of plotting static network graph, we can plot interactive network graph by using visNetwork package. Before we can plot a interactive network graph by using visNetwork package, we are required to prepare two tibble data frames, one for the nodes and the other one for the edges.\n\n### Preparing edges tibble data frame\n\nIn this example, we assume that you already have created a tidygraph model look similar to the print below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_graph\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tbl_graph: 123 nodes and 146 edges\n#\n# A directed acyclic simple graph with 12 components\n#\n# A tibble: 123 × 1\n  id                                             \n  <chr>                                          \n1 1 Ltd. Liability Co Cargo                      \n2 Adriatic Catch Ltd. Liability Co Transportation\n3 Adriatic Tuna AS Solutions                     \n4 Amerigo Dockyard S.p.A. Distribution           \n5 Aqua Adventures Carriers Seabed                \n6 Aqua Azul LC International                     \n# ℹ 117 more rows\n#\n# A tibble: 146 × 5\n   from    to hscode  Year weights\n  <int> <int> <chr>  <dbl>   <int>\n1     1    74 306170  2028      68\n2     2    75 306170  2028      30\n3     3    76 306170  2028      22\n# ℹ 143 more rows\n```\n:::\n:::\n\n\nNote that tidygraph model is in R list format. The code chunk below will be used to extract and convert the edges into a tibble data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedges_df <- mc2_graph %>%\n  activate(edges) %>%\n  as.tibble()\n```\n:::\n\n\n::: callout-node\n## Things to learn from the code chunk above\n\n-   `activate()` is used to make the edges of mc2_graph1 active. This is necessary in order to extract the correct compontent from the list object.\n-   `as.tibble()` is used to convert the edges list into tibble data frame.\n:::\n\n::: callout-important\nYou might be curious to ask why don't we used *mc2_edges*, the tibble data frame extracted in the earlier section. If you compare the data structure of both data frames, you will notice the first two field names in *edges_df* are called *from* and *to* instead of *source* and *target*. This is conformed to the nodes data structure of igraph object. Also note that the data type of *from* and *to* are in numeric data type and not in character data type.\n:::\n\n### Preparing nodes tibble data frame\n\nIn this section, we will prepare a nodes tibble data frame by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes_df <- mc2_graph %>%\n  activate(nodes) %>%\n  as.tibble() %>%\n  rename(label = id) %>%\n  mutate(id=row_number()) %>%\n  select(id, label)\n```\n:::\n\n\n::: callout-note\n## Things to learn from the code chunk above\n\n-   `activate()` is used to make the edges of mc2_graph1 active. This is necessary in order to extract the correct compontent from the list object.\n-   `as.tibble()` is used to convert the edges list into tibble data frame.\n-   `rename()` is used to rename the field name id to label.\n-   `mutate()` is used to create a new field called id and `row_number()` is used to assign the row number into id values.\n-   `select()` is used to re-organised the field name. This is because visNerwork is expecting the first field is called id and the second field is called label.\n:::\n\n::: callout-important\n-   visNetowrk is expecting a field called *id* in the tibble data frame. The field must be in numeric data type and it must unique to the values in the from and to field of edges_df.\\\n:::\n\n### Plotting a simple interactive network graph\n\nTo ensure that the tibble data frames are confirmed to the requirements of visNetwork, we will plot a simple interactive graph by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvisNetwork(nodes_df,\n           edges_df) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\"))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-e5f2ef1be538f055fae0\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e5f2ef1be538f055fae0\">{\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],\"label\":[\"1 Ltd. Liability Co Cargo\",\"Adriatic Catch Ltd. Liability Co Transportation\",\"Adriatic Tuna AS Solutions\",\"Amerigo Dockyard S.p.A. Distribution\",\"Aqua Adventures Carriers Seabed\",\"Aqua Azul LC International\",\"Arunachal Pradesh s Plc\",\"Balkan Cat ОАО Transport\",\"Bay of Bengal's Corp\",\"Blue Horizon Family &\",\"Chuan gou  N.V. Delivery\",\"CoralCove Foods AG Marine conservation\",\"Costa del Mar Ges.m.b.H. Marine biology\",\"Costa del Viento A/S Freight \",\"Daniel Ferry N.V. Transit\",\"Danish Plaice BV Investment\",\"Danish Plaice Ltd. Liability Co Logistics\",\"Donald Sp & Son's\",\"Dutch Bill  Marine mist NV Freight \",\"Dutch Eel AB Holdings\",\"Finests  Salmon Ltd Marine ecology\",\"French  Seabed S.p.A. Forwading\",\"Haryana s Plc Transit\",\"Irish Scallop Corporation Transport\",\"Italian Sardines Ltd. Liability Co\",\"Lake Tana  & Son's\",\"Ltd. Corporation Ltd. Liability Co\",\"Manipur  Market Corporation Cargo\",\"Mar de la Costa Sagl\",\"Mar de la Felicidad BV\",\"Mar de la Felicidad NV\",\"Mar de la Vida S.p.A.\",\"Mar del Oeste Cruise ship\",\"Mar del Placer CJSC Transport\",\"Marine Masterminds SE Saltwater\",\"Michael Ltd. Corporation Seal\",\"Neptune's Realm NV Navigation\",\"Noord Limited Liability Company Line\",\"Náutica del Sol Brothers\",\"Ob River Ltd. Liability Co\",\"Ocean Emporium Pic Holdings\",\"Ocean Outfitters Ltd. Corporation\",\"Oceanfront Oases Co Shipping\",\"Oceanfront Oasis Company Green \",\"Perla del Mar BV\",\"Perla del Mar Deep-sea\",\"Playa de Arena OJSC Express\",\"Playa del Mar Corporation\",\"ReefRider Foods S.p.A. Cargo\",\"Richard S.A. de C.V. Solutions\",\"Rift Valley fishery Sagl\",\"Rufiji River  Ges.m.b.H. Family\",\"Saltwater Sirens Limited Liability Company Marine conservation\",\"SeaBass  Ltd. Liability Co Consulting\",\"Selous Game Reserve  AB\",\"Spanish Shrimp A/S Marine\",\"Surf and Sea Marine\",\"Tamil Nadu s Barge\",\"The Sea Lion Corporation\",\"Tripura  Market S.A. de C.V.\",\"Tristen Jetty Company Solutions\",\"Turkish Sword NV Ocean\",\"Uttar Pradesh Sea  A/S Express\",\"Viento Azul N.V. Distribution\",\"Viento y Mar BV\",\"Wave Watchers Ltd. Liability Co\",\"bǐ mù yú AG Marine\",\"bǐ mù yú Sagl Distribution\",\"guī yú Ltd. Corporation\",\"qīng yú Ltd. Corporation\",\"shí rén yú Marine conservation\",\"suō yú GmbH & Co. KG Freight \",\"xiǎo lóng xiā SRL\",\"Himachal Pradesh  BV Holdings\",\"The Sea Turtle GmbH & Co. KG\",\"AquaDelight N.V. Coral Reef\",\"Caracola del Sol Services\",\"Shou gan  Limited Liability Company Distribution\",\"Caracola del Este Ltd. Liability Co\",\"Casablanca Coast  Flounder Oyj Line\",\"Lake Turkana  Charter Boat  NV Marine\",\"Sea Breeze Corporation Marine sanctuary\",\"-5669\",\"-5670\",\"Arunachal Pradesh s Brine\",\"Costa de la Felicidad Shipping\",\"Mar del Este CJSC\",\"Dubingiai Ltd. Liability Co\",\"Coastal Castaway Coast Corporation Worldwide\",\"Madagascar Coast  AG Freight \",\"Mar del Paraíso Corporation Logistics\",\"Selous Game Reserve  S.A. de C.V.\",\"hǎi dǎn AG Express\",\"hǎi dǎn Corporation Wharf\",\"hǎi mǎ Sagl Express\",\"SeaLion Marine AG Express\",\"Punjab s Marine conservation\",\"Pao gan SE Seal\",\"Arena del Mar Marine Marine biology\",\"Maharashtra  Ltd. Liability Co Shipping\",\"Saltwater Supreme Pelican Ltd Enterprises\",\"West Bengal   OJSC Transport\",\"Tripura  Pier N.V. Solutions\",\"Mar del Placer Manatee\",\"3 Oceanography ОАО Marine life\",\"Water Wonders AG Transport\",\"Rybachit Sagl and Son's\",\"-1363\",\"Kilimanjaro fishery Ltd. Corporation Carriers\",\"-1539\",\"Coral Cove BV Delivery\",\"Isla del Tesoro GmbH & Co. KG Chart\",\"Pao gan LC Freight \",\"Brisa del Este BV\",\"Playa de Arena SE Underwater\",\"Yu xian  SRL Industrial\",\"Black Sea Tuna Snapper\",\"Mar de la Luz Plc\",\"Assam  Market Cargo ship Company Marine conservation\",\"Sailors and Surfers Incorporated Enterprises\",\"-1203\",\"Mar de Plata BV Marine\",\"Selkie Ltd. Liability Co\"],\"x\":[0.982429661133112,-0.143496941667794,-0.194329612126724,0.995223257704519,-0.0342609222428021,0.348630868995412,-0.793968580785522,0.0494788247830062,-0.415900325149006,0.0329237484595111,-0.493737549354102,-0.318081874151552,-0.500416084717239,-0.345147652919995,-0.518327746569374,-0.826025234776778,0.06648661446392,-0.433768243393206,-0.802386603378392,-0.166374437450824,-0.371757122301335,-0.417413691111779,-0.0408390882716093,1,-0.511429460660446,-0.0508444451530256,0.17567823325882,0.215407453168302,0.918522610432136,0.440254116636525,0.185657274153065,0.435331658509962,-0.135589033547124,-0.340476675912173,-0.399767953657841,-0.27926309174512,-0.408680009446077,0.550715571741235,-0.501737479328529,0.36580999174039,0.405127425155872,0.334145247171076,0.622651899615823,0.339051983834363,-0.799952196677775,0.0152054176091112,-0.127135517119996,0.516460723203599,-1,-0.574853990545272,-0.293338816910894,-0.444548716549731,0.328378221357073,-0.221788219870203,-0.874472778272576,0.0306590316187345,-0.318007033281158,-0.0260300100538555,-0.133257350275405,0.177090559740358,0.451791556679731,-0.589238272372503,0.472422805353824,-0.535832380398706,-0.268684726398926,0.323740566785995,0.13254720672541,-0.0136028277168201,0.386865284819741,0.696958746259197,0.532681278584358,0.857885876094423,-0.00944803061569766,0.991967699533724,-0.0585692696692526,-0.313922518557855,-0.00220865966504147,0.989450904342914,-0.24009736811372,-0.0255667370230982,0.186747166965581,0.0346348657673643,0.398856312323392,0.317456155141368,0.528817175977732,0.478188948909437,0.220043957528123,-0.641771095440801,0.0918084552763803,0.184441271955534,0.200964110685752,0.31887408606814,0.360968095164162,-0.211696820625622,0.17808064093339,-0.709861565474986,-0.182251087216839,-0.663773631319037,0.116838846764483,-0.552395150524701,-0.311603391299301,-0.607232806141421,-0.0365665684827942,0.441844932045274,0.850927039342304,0.184401984927003,-0.499715618317301,0.544402255231636,0.362246911420662,0.533349987086876,0.772877954716081,-0.876771850865354,-0.111658568579979,0.562719094192284,0.713540954564418,-0.977373117386269,-0.309165428013473,-0.206967820412491,-0.647862004587458,0.541997228460792,0.0202202760780767,0.76647403712692,0.903143317905395],\"y\":[-0.2885558982901,-0.984942107243796,0.0912482906117729,0.117745405057571,-0.430392606251929,-0.691327397181595,0.413055347468737,-0.0137074216828141,0.2099288344371,-0.512039344074692,0.0856014564439629,-0.24212522272169,0.181486601532342,-0.568200232058785,-0.0700890683211873,-0.269150220561203,-0.574848956490342,-0.659557379638979,-0.166865793055158,-0.708618507009411,0.457073374100101,-0.352681256652723,0.413560968762858,-0.0872335161246679,0.350838884201327,-0.164184670549873,0.293816377476081,-0.035316504657613,0.432727181133537,0.465445446076065,0.860788145007902,-0.16942094836696,-0.25019764641099,-0.660670947621961,-0.474495139794252,-0.105011905829882,0.904097619985301,0.754563191750524,0.00631097360287125,0.941164994991872,-0.484968739453688,-0.52989725409098,0.238471515171135,0.504517563949273,-0.371800116447624,-0.36241159007593,0.00220350994499863,-0.271285599175595,0.0977053548584657,0.0696638987489251,0.732994527046541,-0.543375480750342,-0.042814226434828,-0.608585653070487,-0.118710378368399,0.0355650917357326,0.358676781034705,-1,1,-0.124575342977913,-0.417904198222083,0.803353141935593,0.271517394339069,0.430165832465345,-0.682402647602095,-0.161552680480724,-0.375983467268504,0.852947194813567,-0.33684342888629,0.698407307783371,0.210465560281496,-0.615728611211331,0.246103320989054,-0.187202568163529,-0.822126862503266,0.0342155276625529,-0.0270508069382224,0.214193090740451,-0.167573790305659,-0.664062932902497,-0.604978450100923,-0.185350203316632,-0.869021613050869,-0.891418945752668,-0.766465322531477,-0.841732829609556,-0.333483620948522,0.320398107381437,0.236588168480544,-0.266874285775049,0.0458192221932949,0.285839180610265,0.150365109441166,-0.429429831102875,0.180951480654236,0.158963189603654,-0.345591565171713,-0.199229773886788,-0.800050474410403,-0.79504649883179,0.22935463546534,-0.451739294728837,0.150544297889179,0.052148103892119,0.495631072627735,0.959729888607727,0.853022479516763,0.846208216922761,0.846783748277653,-0.620302707363629,0.275087983685734,-0.488371254769449,0.179853452448401,-0.127356149154661,-0.312776662405746,-0.0186686121106961,0.592169184922508,0.950826248210715,0.569795854107069,0.0109552047775359,0.94411122341373,0.642000407384714,-0.52717893295365]},\"edges\":{\"from\":[1,2,3,3,4,5,5,5,5,6,6,6,6,6,6,7,8,8,8,8,8,8,8,8,8,9,10,10,10,10,11,11,11,11,12,12,12,13,14,15,16,17,17,17,17,18,18,19,20,20,21,22,22,22,23,24,25,25,26,26,26,26,26,27,28,28,28,29,30,31,32,32,33,33,33,34,35,36,36,36,36,36,36,37,38,39,40,41,42,42,42,43,43,44,45,45,46,46,47,47,47,47,48,48,48,49,50,51,52,53,53,54,55,55,56,56,56,56,56,56,57,57,58,59,60,60,60,61,62,63,63,64,64,64,65,66,66,66,67,68,69,70,71,71,72,73],\"to\":[74,75,76,77,78,79,80,81,82,83,84,85,86,81,87,88,76,79,89,90,91,92,93,94,95,76,90,87,75,94,76,79,88,96,76,97,94,76,94,76,98,99,81,87,94,100,94,98,75,94,101,79,102,94,103,74,88,101,76,90,87,103,94,92,77,104,82,105,92,106,87,104,77,97,94,94,94,76,77,98,101,82,94,107,108,76,109,87,110,81,90,111,93,92,112,98,90,97,76,77,113,82,114,90,115,116,76,117,94,114,77,94,98,116,27,90,87,113,101,103,76,117,75,118,77,87,91,87,107,104,92,119,88,101,94,87,120,82,82,121,90,122,120,92,123,77],\"hscode\":[\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\",\"306170\"],\"Yearweights\":[68,30,22,21,42,80,23,42,46,54,21,234,30,33,22,28,126,31,23,36,66,36,62,29,37,54,61,21,23,45,63,182,24,24,64,89,44,40,73,176,95,34,65,21,134,50,29,25,191,80,24,42,22,35,120,68,28,50,101,49,40,25,39,83,246,127,59,25,49,80,43,22,135,35,26,26,173,21,26,34,36,32,27,183,73,96,21,64,35,41,57,41,82,63,28,44,70,115,23,30,36,27,79,40,37,24,36,41,62,25,46,59,63,26,125,72,26,90,55,36,122,22,57,30,23,22,21,204,260,36,74,21,37,28,36,456,67,25,35,33,32,164,32,44,58,30]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"physics\":false},\"manipulation\":{\"enabled\":false},\"edges\":{\"arrows\":\"to\",\"smooth\":{\"enabled\":true,\"type\":\"curvedCW\"}},\"physics\":{\"stabilization\":false}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"igraphlayout\":{\"type\":\"square\"}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [
      "MC2-Kick-starter1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\r\n<link href=\"../../site_libs/vis-9.1.0/vis-network.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/vis-9.1.0/vis-network.min.js\"></script>\r\n<script src=\"../../site_libs/visNetwork-binding-2.1.2/visNetwork.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}