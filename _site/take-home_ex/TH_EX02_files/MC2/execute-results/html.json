{
  "hash": "259d4aab8aac061826ee130bab2dc9f4",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 2: KickStarter\"\ndate: \"12/4/2023\"\ndate-modified: \"2023-05-22\"\nformat: html\nexecute: \n  eval: true\n  echo: true\n  warning: false\neditor: visual\n---\n\n\n::: callout-warning\n## Declaimer\nThis document aims to provide you guidance on how to get started with Takehome Exercise 2, especially how to prepare the network data. It is not a model answer.\n:::\n\n## Getting Started\n\nThe code chunk below will be used to install and load the necessary R packages to meet the data preparation, data wrangling, data analysis and visualisation needs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, lubridate, tidyverse)\n```\n:::\n\n\n## Data Import\n\nIn the code chunk below, `fromJSON()` of **jsonlite** package is used to import *mc2_challenge_graph.json* into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_data <- fromJSON(\"data/mc2_challenge_graph.json\")\n```\n:::\n\n\n::: Callout-note\nExamine the list object created by using RStudio, especially *nodes* and *links* data tables.\n:::\n\n## Data Wrangling\n\n### Extracting the nodes\n\nThe code chunk is used to extract *nodes* data table from *mc2_data* list object and save the output in a tibble data frame object called *mc2_nodes*.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_nodes <- as_tibble(mc2_data$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n```\n:::\n\n\n::: callout-note\n## Thing to learn\n- `select()` is used not only to select the field needed but also to re-organise the sequent of the fields. \n:::\n\n### Extracting the edges\n\nThe code chunk is used to extract *edgess* data table from *mc2_data* list object and save the output in a tibble data frame object called *mc2_edges*. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_edges <- as_tibble(mc2_data$links) %>%\n  mutate(ArrivalDate = ymd(arrivaldate)) %>%\n  mutate(Year = year(ArrivalDate)) %>%\n  select(source, target, ArrivalDate, Year, hscode, valueofgoods_omu, \n         volumeteu, weightkg, valueofgoodsusd) %>% \n  distinct()\n```\n:::\n\n\n::: callout-note\n## Things to learn\n- `mutate()` is used two times to create two derive fields.\n  - `ymd()` of **lubridate** package is used to covert *arrivaldate* field from character data type into date data type.\n  - `year()` of **lubridate** package is used to convert the values in ArrivalDate field into year values. \n- `select()` is used not only to select the field needed but also to re-organise the sequent of the fields. \n:::\n\n### Preparing edges data table\n\n::: callout-note \n## Things to learn from the code chunk below\n- `filter()` is used to select records whereby hscode is equal 306170 and Year is equal to 2028.\n- `group_by()` is used to aggregate values by source, target, hscode, Year.\n- `summarise()` and `n()` are used to count the aggregated records.\n- filter() is then used to perform two selections\n  - to select all records whereby source are not equal to target, and\n  - to select all records whereby the values of their weights field are greater than 20\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_edges_aggregated <- mc2_edges %>%\n  filter(hscode == \"306170\" & Year == \"2028\") %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target) %>%\n  filter(weights > 20) %>%\n  ungroup()\n```\n:::\n\n\n## Preparing nodes data\n\nInstead of using the nodes data table extracted from *mc2_data*, we will prepare a new nodes data table by using the source and target fields of `mc2_edges_aggregated` data table.  This is necessary to ensure that the nodes in nodes data tables include all the source and target values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nid1 <- mc2_edges_aggregated %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- mc2_edges_aggregated %>%\n  select(target) %>%\n  rename(id = target)\nmc2_nodes_extracted <- rbind(id1, id2) %>%\n  distinct()\n```\n:::\n\n\n## Building the tidy graph data model\n\nThe code chunk below is then used to build the tidy graph data model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_graph <- tbl_graph(nodes = mc2_nodes_extracted,\n                       edges = mc2_edges_aggregated,\n                       directed = TRUE)\n```\n:::\n\n\n## Visualising the network graph\n\nIn this code chunk below, appropriate functions from **ggraph** package are used to prepare the network graph. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(mc2_graph,\n       layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes()) +\n  theme_graph()\n```\n\n::: {.cell-output-display}\n![](MC2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "MC2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}